{"ast":null,"code":"var _jsxFileName = \"/Users/guest01/Documents/my-dictionary/my-dictionary/src/Synonyms.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Synonyms(props) {\n  if (props.synonyms) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"Synonyms\",\n      children: props.synonyms.map(function (synonym, index) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", synonym]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Synonyms;\nvar _c;\n$RefreshReg$(_c, \"Synonyms\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Synonyms","props","synonyms","className","children","map","synonym","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/guest01/Documents/my-dictionary/my-dictionary/src/Synonyms.js"],"sourcesContent":["import React from \"react\";\n\n\n\nexport default function Synonyms(props) {\n    if (props.synonyms) {\n    return (\n        <ul className = \"Synonyms\"> \n        {props.synonyms.map(function (synonym, index) {\n        return ( <li key={index}> {synonym}</li>\n        );\n        \n    })}\n\n       </ul>\n    );\n\n } else {\n    return null;\n     }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EACpC,IAAIA,KAAK,CAACC,QAAQ,EAAE;IACpB,oBACIH,OAAA;MAAII,SAAS,EAAG,UAAU;MAAAC,QAAA,EACzBH,KAAK,CAACC,QAAQ,CAACG,GAAG,CAAC,UAAUC,OAAO,EAAEC,KAAK,EAAE;QAC9C,oBAASR,OAAA;UAAAK,QAAA,GAAgB,GAAC,EAACE,OAAO;QAAA,GAAhBC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC;MAG5C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAGX,CAAC,MAAM;IACJ,OAAO,IAAI;EACV;AACL;AAACC,EAAA,GAhBuBZ,QAAQ;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}