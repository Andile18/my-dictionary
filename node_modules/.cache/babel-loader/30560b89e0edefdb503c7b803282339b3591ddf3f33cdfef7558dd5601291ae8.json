{"ast":null,"code":"var _jsxFileName = \"/Users/guest01/Documents/my-dictionary/src/Dictionary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport \"./Dictionary.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n  let [keyword, setKeyword] = useState(props.defaultKeyword);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n  function handlePexelResponse(response) {\n    console.log(response);\n  }\n  function search() {\n    //documentation: https://mydictionaryapi.dev/e     \n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleDictionResponse);\n    let pexelApiKey = \"LP30UH4DF3pyshhGcORFxrhCOt26nVtd9DF6vV4gtauDoPFvuiBsWNL7\";\n    let pexelApiUrl = `https://api.pexels.com/v1/search?query={keyword}&per_page=1`;\n    let headers = {\n      authorization: `Bearer ${pexelsApiKey}`\n    };\n    axios.get(pexelApiUrl, {\n      headers: headers\n    }).then(handlePexelResponse);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n  function handleKeyWordChange(event) {\n    setKeyword(event.target.value);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" What are you looking up? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: handleKeyWordChange,\n            defaultValue: props.defaultKeyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint\",\n          children: \"suggested words: sunset, franance, yoga, tree..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this);\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n_s(Dictionary, \"vcT7ze7T16QiEXvL6P6b2zmXAUw=\");\n_c = Dictionary;\nvar _c;\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"names":["React","useState","axios","Results","jsxDEV","_jsxDEV","Dictionary","props","_s","keyword","setKeyword","defaultKeyword","results","setResults","loaded","setLoaded","handleResponse","response","data","handlePexelResponse","console","log","search","apiUrl","get","then","handleDictionResponse","pexelApiKey","pexelApiUrl","headers","authorization","pexelsApiKey","handleSubmit","event","preventDefault","handleKeyWordChange","target","value","load","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","defaultValue","_c","$RefreshReg$"],"sources":["/Users/guest01/Documents/my-dictionary/src/Dictionary.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport \"./Dictionary.css\";\n\n\n      export default function Dictionary (props)\n    {\n      let [keyword, setKeyword]= useState(props.defaultKeyword);\n      let [results , setResults] = useState(null);\n      let [loaded, setLoaded] =useState(false);\n\n\n\n      function handleResponse (response){\n      setResults(response.data[0]);\n    }\n\n\n  function handlePexelResponse(response){\n    console.log(response);\n\n  }\n\n\n    function search (){\n\n     //documentation: https://mydictionaryapi.dev/e     \n     let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n     axios.get(apiUrl).then(handleDictionResponse);\n\n    \n  let pexelApiKey =\"LP30UH4DF3pyshhGcORFxrhCOt26nVtd9DF6vV4gtauDoPFvuiBsWNL7\";\n  let pexelApiUrl =\n  `https://api.pexels.com/v1/search?query={keyword}&per_page=1`;\n  let headers = { authorization: `Bearer ${pexelsApiKey}` };\n  axios.get(pexelApiUrl,{ headers: headers}).then(handlePexelResponse);\n  }\n\n   function handleSubmit(event){\n      event.preventDefault();\n      search ();\n\n    }\n\n\n    function handleKeyWordChange(event)\n    {\n        setKeyword(event.target.value);\n    }\n\n\n      function load (){\n        setLoaded(true);\n        search();\n      }\n\n    if (loaded){\n    return ( <div className=\"Dictionary\"> \n    <section> \n        <h1> What are you looking up? </h1>\n             <form onSubmit={handleSubmit}>  \n             <input type=\"search\" onChange= {handleKeyWordChange}\n             defaultValue={props.defaultKeyword} />\n    </form>\n    <div className=\"hint\">\n        suggested words: sunset, franance, yoga, tree..\n    </div>\n    </section>\n    <Results results={results} />\n    </div>\n    );\n    } else {\n        load();\n        return \"Loading\";\n    }\n    }\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpB,eAAe,SAASC,UAAUA,CAAEC,KAAK,EAC3C;EAAAC,EAAA;EACE,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAET,QAAQ,CAACM,KAAK,CAACI,cAAc,CAAC;EACzD,IAAI,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC3C,IAAI,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAEd,QAAQ,CAAC,KAAK,CAAC;EAIxC,SAASe,cAAcA,CAAEC,QAAQ,EAAC;IAClCJ,UAAU,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC9B;EAGF,SAASC,mBAAmBA,CAACF,QAAQ,EAAC;IACpCG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAEvB;EAGE,SAASK,MAAMA,CAAA,EAAG;IAEjB;IACA,IAAIC,MAAM,GAAG,sDAAsDd,OAAO,EAAE;IAC5EP,KAAK,CAACsB,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACC,qBAAqB,CAAC;IAGhD,IAAIC,WAAW,GAAE,0DAA0D;IAC3E,IAAIC,WAAW,GACf,6DAA6D;IAC7D,IAAIC,OAAO,GAAG;MAAEC,aAAa,EAAE,UAAUC,YAAY;IAAG,CAAC;IACzD7B,KAAK,CAACsB,GAAG,CAACI,WAAW,EAAC;MAAEC,OAAO,EAAEA;IAAO,CAAC,CAAC,CAACJ,IAAI,CAACN,mBAAmB,CAAC;EACpE;EAEC,SAASa,YAAYA,CAACC,KAAK,EAAC;IACzBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBZ,MAAM,CAAE,CAAC;EAEX;EAGA,SAASa,mBAAmBA,CAACF,KAAK,EAClC;IACIvB,UAAU,CAACuB,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAClC;EAGE,SAASC,IAAIA,CAAA,EAAG;IACdvB,SAAS,CAAC,IAAI,CAAC;IACfO,MAAM,CAAC,CAAC;EACV;EAEF,IAAIR,MAAM,EAAC;IACX,oBAAST,OAAA;MAAKkC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACpCnC,OAAA;QAAAmC,QAAA,gBACInC,OAAA;UAAAmC,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BvC,OAAA;UAAMwC,QAAQ,EAAEb,YAAa;UAAAQ,QAAA,eAC7BnC,OAAA;YAAOyC,IAAI,EAAC,QAAQ;YAACC,QAAQ,EAAGZ,mBAAoB;YACpDa,YAAY,EAAEzC,KAAK,CAACI;UAAe;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACPvC,OAAA;UAAKkC,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAEtB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACVvC,OAAA,CAACF,OAAO;QAACS,OAAO,EAAEA;MAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAEN,CAAC,MAAM;IACHN,IAAI,CAAC,CAAC;IACN,OAAO,SAAS;EACpB;AACA;AAAC9B,EAAA,CAtEyBF,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}